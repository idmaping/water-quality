{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase';\nimport SensorPlot from '../component/SensorPlot';\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown, FormControl } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport DatePicker from 'react-date-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph(props) {\n  _s();\n\n  const [sensorDate, setSensorDate] = useState();\n  const [sensorTime, setSensorTime] = useState();\n  const [sensorPH, setSensorPH] = useState();\n  const [sensorTDS, setSensorTDS] = useState();\n  const [sensorDO, setSensorDO] = useState();\n  const [sensorEC, setSensorEC] = useState();\n  const [sensorORP, setSensorORP] = useState();\n  const [sensorTEMP, setSensorTEMP] = useState(); //const [sensorLon, setSensorLon] = useState()\n  //const [sensorLat, setSensorLat] = useState()\n\n  const [sensorWC, setSensorWC] = useState(); //const [dbList, setDbList] = useState()\n\n  const [idMachine, setIdMachine] = useState('kapal-1');\n  const [tanggal, setTanggal] = useState('');\n  const [bulan, setBulan] = useState('');\n  const [tahun, setTahun] = useState('');\n  const [graphDate, setGraphDate] = useState(new Date());\n  const [graphSelect, setGraphSelect] = useState(0);\n\n  const handleGraphSelect = e => {\n    setGraphSelect(e);\n  };\n\n  const monthText = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n\n  const grafikBulanan = () => {\n    console.log(\"Bulanan\");\n    const dataygReady = [];\n    const dbRef = firebase.database().ref('dbrt').child(idMachine).child(graphDate.getFullYear()).child(graphDate.getMonth() + 1);\n    dbRef.on('value', snapshot => {\n      const db = snapshot.val();\n\n      for (let id in db) {\n        dataygReady.push(id);\n      }\n\n      console.log(db[3]);\n    });\n  };\n\n  const grafikHarian = () => {\n    const dbRef = firebase.database().ref('dbrt').child(idMachine).child(graphDate.getFullYear()).child(graphDate.getMonth() + 1).child(graphDate.getDate());\n    dbRef.on('value', snapshot => {\n      const db = snapshot.val(); //const listDb = []\n\n      const listDate = [];\n      const listTime = [];\n      const listPH = [];\n      const listTDS = [];\n      const listDO = [];\n      const listEC = [];\n      const listORP = [];\n      const listTEMP = [];\n      const listWC = [];\n\n      for (let id in db) {\n        //listDb.push(db[id])\n        listDate.push(db[id].date);\n        listTime.push(db[id].time);\n        listPH.push(db[id].ph);\n        listTDS.push(db[id].tds);\n        listDO.push(db[id].do);\n        listEC.push(db[id].ec);\n        listORP.push(db[id].orp);\n        listTEMP.push(db[id].temp);\n        listWC.push(db[id].wc);\n      } //setDbList(listDb)\n\n\n      setSensorDate(listDate);\n      setSensorTime(listTime);\n      setSensorPH(listPH);\n      setSensorTDS(listTDS);\n      setSensorDO(listDO);\n      setSensorEC(listEC);\n      setSensorORP(listORP);\n      setSensorTEMP(listTEMP);\n      setSensorWC(listTEMP);\n    });\n    console.log(\"Harian\");\n\n    try {\n      var temp = sensorDate[0].split(\"/\");\n      setTanggal(temp[0]);\n      setBulan(monthText[temp[1] - 1]);\n      setTahun(temp[2]);\n      console.log(temp);\n    } catch (e) {\n      console.error(\"Error\");\n      setTanggal(\"\");\n      setBulan(\"Data\");\n      setTahun(\"Tidak Ditemukan\");\n    }\n  };\n\n  const handleRefresh = async () => {\n    graphSelect > 0 ? grafikBulanan() : grafikHarian();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        xs: 8,\n        md: 3,\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: [graphSelect > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"Grafik Bulanan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"Grafik Harian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 89\n          }, this), graphSelect > 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"center\",\n            children: `${bulan} ${tahun}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"center\",\n            children: `${tanggal} ${bulan} ${tahun}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleRefresh,\n            className: \"btn btn-primary\",\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"secondary\",\n            title: graphSelect > 0 ? \"Bulanan\" : \"Harian\",\n            id: \"input-group-dropdown-1\",\n            onSelect: handleGraphSelect,\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"0\",\n              children: \"Harian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"1\",\n              children: \"Bulanan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onChange: setGraphDate,\n            value: graphDate,\n            format: \"d-M-y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 1,\n        className: \"g-4 justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"PH Meter\",\n          data: sensorPH,\n          labels: sensorTime,\n          linecolor: \"200, 0, 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"TDS\",\n          data: sensorTDS,\n          labels: sensorTime,\n          linecolor: \"100, 76, 102\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"DO\",\n          data: sensorDO,\n          labels: sensorTime,\n          linecolor: \"3, 6, 202\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"EC\",\n          data: sensorEC,\n          labels: sensorTime,\n          linecolor: \"205, 120, 62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"ORP\",\n          data: sensorORP,\n          labels: sensorTime,\n          linecolor: \"130, 150, 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"Temperatur\",\n          data: sensorTEMP,\n          labels: sensorTime,\n          linecolor: \"3, 76, 102\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"Water Contact\",\n          data: sensorWC,\n          labels: sensorTime,\n          linecolor: \"20, 153, 23\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graph, \"dnVP7we+5/cWBrJS0V2Y296cGG0=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js"],"names":["React","useEffect","useState","firebase","SensorPlot","Row","Col","Container","InputGroup","DropdownButton","Dropdown","FormControl","Form","DatePicker","Graph","props","sensorDate","setSensorDate","sensorTime","setSensorTime","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORP","setSensorORP","sensorTEMP","setSensorTEMP","sensorWC","setSensorWC","idMachine","setIdMachine","tanggal","setTanggal","bulan","setBulan","tahun","setTahun","graphDate","setGraphDate","Date","graphSelect","setGraphSelect","handleGraphSelect","e","monthText","grafikBulanan","console","log","dataygReady","dbRef","database","ref","child","getFullYear","getMonth","on","snapshot","db","val","id","push","grafikHarian","getDate","listDate","listTime","listPH","listTDS","listDO","listEC","listORP","listTEMP","listWC","date","time","ph","tds","do","ec","orp","temp","wc","split","error","handleRefresh","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase'\nimport SensorPlot from '../component/SensorPlot'\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown, FormControl } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form'\nimport DatePicker from 'react-date-picker';\n\n\nfunction Graph(props) {\n\n    const [sensorDate, setSensorDate] = useState()\n    const [sensorTime, setSensorTime] = useState()\n    const [sensorPH, setSensorPH] = useState()\n    const [sensorTDS, setSensorTDS] = useState()\n    const [sensorDO, setSensorDO] = useState()\n    const [sensorEC, setSensorEC] = useState()\n    const [sensorORP, setSensorORP] = useState()\n    const [sensorTEMP, setSensorTEMP] = useState()\n    //const [sensorLon, setSensorLon] = useState()\n    //const [sensorLat, setSensorLat] = useState()\n    const [sensorWC, setSensorWC] = useState()\n    //const [dbList, setDbList] = useState()\n\n\n    const [idMachine, setIdMachine] = useState('kapal-1')\n    const [tanggal, setTanggal] = useState('')\n    const [bulan, setBulan] = useState('')\n    const [tahun, setTahun] = useState('')\n\n    const [graphDate, setGraphDate] = useState(new Date());\n    const [graphSelect, setGraphSelect] = useState(0);\n\n    const handleGraphSelect = (e) => {\n        setGraphSelect(e)\n    }\n\n    const monthText = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n\n    const grafikBulanan = () => {\n        console.log(\"Bulanan\")\n\n        const dataygReady = []\n\n        const dbRef = firebase.database().ref('dbrt').child(idMachine).child(graphDate.getFullYear()).child(graphDate.getMonth() + 1)\n        dbRef.on('value', (snapshot) => {\n            const db = snapshot.val()\n            for (let id in db) {\n                dataygReady.push(id)\n            }\n            console.log(db[3]);\n            \n        })\n\n\n        \n\n    }\n\n    const grafikHarian = () => {\n        const dbRef = firebase.database().ref('dbrt').child(idMachine).child(graphDate.getFullYear()).child(graphDate.getMonth() + 1).child(graphDate.getDate())\n        dbRef.on('value', (snapshot) => {\n            const db = snapshot.val()\n            //const listDb = []\n            const listDate = []\n            const listTime = []\n            const listPH = []\n            const listTDS = []\n            const listDO = []\n            const listEC = []\n            const listORP = []\n            const listTEMP = []\n            const listWC = []\n\n            for (let id in db) {\n                //listDb.push(db[id])\n                listDate.push(db[id].date)\n                listTime.push(db[id].time)\n                listPH.push(db[id].ph)\n                listTDS.push(db[id].tds)\n                listDO.push(db[id].do)\n                listEC.push(db[id].ec)\n                listORP.push(db[id].orp)\n                listTEMP.push(db[id].temp)\n                listWC.push(db[id].wc)\n            }\n            //setDbList(listDb)\n            setSensorDate(listDate)\n            setSensorTime(listTime)\n            setSensorPH(listPH)\n            setSensorTDS(listTDS)\n            setSensorDO(listDO)\n            setSensorEC(listEC)\n            setSensorORP(listORP)\n            setSensorTEMP(listTEMP)\n            setSensorWC(listTEMP)\n        })\n        console.log(\"Harian\")\n        try {\n            var temp = sensorDate[0].split(\"/\")\n            setTanggal(temp[0])\n            setBulan(monthText[temp[1] - 1])\n            setTahun(temp[2])\n            console.log(temp)\n        } catch (e) {\n            console.error(\"Error\")\n            setTanggal(\"\")\n            setBulan(\"Data\")\n            setTahun(\"Tidak Ditemukan\")\n        }\n    }\n\n    const handleRefresh = async() => {\n\n        graphSelect > 0 ? grafikBulanan() : grafikHarian()\n\n    }\n\n    return (\n        <div>\n            <Container fluid=\"md\">\n\n                <Row xs={8} md={3} className=\"justify-content-md-center\">\n                    <div className=\"Container\" style={{ textAlign: \"center\" }}>\n                        {graphSelect > 0 ? <h1 className=\"center\">Grafik Bulanan</h1> : <h1 className=\"center\">Grafik Harian</h1>}\n                        {graphSelect > 0\n                            ? <h2 className=\"center\">{`${bulan} ${tahun}`}</h2>\n                            : <h2 className=\"center\">{`${tanggal} ${bulan} ${tahun}`}</h2>}\n                    </div>\n                    <InputGroup className=\"mb-3\">\n                        <button type=\"button\" onClick={handleRefresh} className=\"btn btn-primary\">Refresh</button>\n                        <DropdownButton\n                            variant=\"secondary\"\n                            title={graphSelect > 0 ? \"Bulanan\" : \"Harian\"}\n                            id=\"input-group-dropdown-1\"\n                            onSelect={handleGraphSelect}\n                        >\n                            <Dropdown.Item eventKey=\"0\">Harian</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"1\">Bulanan</Dropdown.Item>\n                        </DropdownButton>\n\n                        <DatePicker\n                            onChange={setGraphDate}\n                            value={graphDate}\n                            format=\"d-M-y\"\n                        />\n\n                    </InputGroup>\n                </Row>\n\n                <Row xs={1} md={1} className=\"g-4 justify-content-md-center\">\n                    <SensorPlot\n                        labelname=\"PH Meter\"\n                        data={sensorPH}\n                        labels={sensorTime}\n                        linecolor='200, 0, 0'\n                    />\n                    <SensorPlot\n                        labelname=\"TDS\"\n                        data={sensorTDS}\n                        labels={sensorTime}\n                        linecolor='100, 76, 102'\n                    />\n                    <SensorPlot\n                        labelname=\"DO\"\n                        data={sensorDO}\n                        labels={sensorTime}\n                        linecolor='3, 6, 202'\n                    />\n                    <SensorPlot\n                        labelname=\"EC\"\n                        data={sensorEC}\n                        labels={sensorTime}\n                        linecolor='205, 120, 62'\n                    />\n                    <SensorPlot\n                        labelname=\"ORP\"\n                        data={sensorORP}\n                        labels={sensorTime}\n                        linecolor='130, 150, 10'\n                    />\n                    <SensorPlot\n                        labelname=\"Temperatur\"\n                        data={sensorTEMP}\n                        labels={sensorTime}\n                        linecolor='3, 76, 102'\n                    />\n                    <SensorPlot\n                        labelname=\"Water Contact\"\n                        data={sensorWC}\n                        labels={sensorTime}\n                        linecolor='20, 153, 23'\n                    />\n                </Row>\n\n            </Container>\n        </div>\n    );\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}