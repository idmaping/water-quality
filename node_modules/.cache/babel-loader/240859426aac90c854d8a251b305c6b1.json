{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase';\nimport SensorPlot from '../component/SensorPlot';\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown, FormControl } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport DatePicker from 'react-date-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph(props) {\n  _s();\n\n  const [sensorDate, setSensorDate] = useState();\n  const [sensorTime, setSensorTime] = useState();\n  const [sensorPH, setSensorPH] = useState();\n  const [sensorTDS, setSensorTDS] = useState();\n  const [sensorDO, setSensorDO] = useState();\n  const [sensorEC, setSensorEC] = useState();\n  const [sensorORP, setSensorORP] = useState();\n  const [sensorTEMP, setSensorTEMP] = useState();\n  const [sensorLon, setSensorLon] = useState();\n  const [sensorLat, setSensorLat] = useState();\n  const [sensorWC, setSensorWC] = useState();\n  const [dbList, setDbList] = useState();\n  const [idMachine, setIdMachine] = useState('kapal-1');\n  const [tanggal, setTanggal] = useState(0);\n  const [bulan, setBulan] = useState(0);\n  const [tahun, setTahun] = useState(0);\n  const [graphDate, setGraphDate] = useState(new Date());\n  const [graphSelect, setGraphSelect] = useState(0);\n\n  const handleGraphSelect = e => {\n    setGraphSelect(e);\n  };\n\n  const monthText = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n\n  const handleRefresh = () => {\n    //setTanggal(graphDate.getDate())\n    //setBulan(graphDate.getMonth() + 1)\n    //setTahun(graphDate.getFullYear())\n    const dbRef = firebase.database().ref('dbrt').child(idMachine).child(2021).child(9).child(graphDate.getDate());\n    dbRef.on('value', snapshot => {\n      const db = snapshot.val();\n      const listDb = []; //const listDate = []\n\n      const listTime = [];\n      const listPH = [];\n\n      for (let id in db) {\n        listDb.push(db[id]); //listDate.push(db[id].date)\n\n        listTime.push(db[id].time);\n        listPH.push(db[id].ph);\n      }\n\n      setDbList(listDb);\n      setSensorDate(listDate);\n      setSensorTime(listTime);\n      setSensorPH(listPH);\n    });\n    console.log(tanggal, bulan, tahun);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        xs: 8,\n        md: 3,\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: [graphSelect > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"Grafik Bulanan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"Grafik Harian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 89\n          }, this), graphSelect > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: `${monthText[graphDate.getMonth()]} ${graphDate.getFullYear()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: `${tanggal} ${bulan} ${tahun}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleRefresh,\n            className: \"btn btn-primary\",\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"secondary\",\n            title: graphSelect > 0 ? \"Bulanan\" : \"Harian\",\n            id: \"input-group-dropdown-1\",\n            onSelect: handleGraphSelect,\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"0\",\n              children: \"Harian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"1\",\n              children: \"Bulanan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onChange: setGraphDate,\n            value: graphDate,\n            format: \"d-M-y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 1,\n        className: \"g-4 justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"PH Meter\",\n          data: sensorPH,\n          labels: sensorTime,\n          linecolor: \"200, 0, 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"TDS\",\n          data: sensorTDS,\n          labels: sensorTime,\n          linecolor: \"100, 76, 102\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"DO\",\n          data: sensorDO,\n          labels: sensorTime,\n          linecolor: \"3, 6, 202\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"EC\",\n          data: sensorEC,\n          labels: sensorTime,\n          linecolor: \"205, 120, 62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"ORP\",\n          data: sensorORP,\n          labels: sensorTime,\n          linecolor: \"130, 150, 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"Temperatur\",\n          data: sensorTEMP,\n          labels: sensorTime,\n          linecolor: \"3, 76, 102\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"Water Contact\",\n          data: sensorWC,\n          labels: sensorTime,\n          linecolor: \"20, 153, 23\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graph, \"fcFAqM5Zw0LCt7MLmKlxXOXzIMw=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js"],"names":["React","useEffect","useState","firebase","SensorPlot","Row","Col","Container","InputGroup","DropdownButton","Dropdown","FormControl","Form","DatePicker","Graph","props","sensorDate","setSensorDate","sensorTime","setSensorTime","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORP","setSensorORP","sensorTEMP","setSensorTEMP","sensorLon","setSensorLon","sensorLat","setSensorLat","sensorWC","setSensorWC","dbList","setDbList","idMachine","setIdMachine","tanggal","setTanggal","bulan","setBulan","tahun","setTahun","graphDate","setGraphDate","Date","graphSelect","setGraphSelect","handleGraphSelect","e","monthText","handleRefresh","dbRef","database","ref","child","getDate","on","snapshot","db","val","listDb","listTime","listPH","id","push","time","ph","listDate","console","log","textAlign","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase'\nimport SensorPlot from '../component/SensorPlot'\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown, FormControl } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form'\nimport DatePicker from 'react-date-picker';\n\n\nfunction Graph(props) {\n\n    const [sensorDate, setSensorDate] = useState()\n    const [sensorTime, setSensorTime] = useState()\n    const [sensorPH, setSensorPH] = useState()\n    const [sensorTDS, setSensorTDS] = useState()\n    const [sensorDO, setSensorDO] = useState()\n    const [sensorEC, setSensorEC] = useState()\n    const [sensorORP, setSensorORP] = useState()\n    const [sensorTEMP, setSensorTEMP] = useState()\n    const [sensorLon, setSensorLon] = useState()\n    const [sensorLat, setSensorLat] = useState()\n    const [sensorWC, setSensorWC] = useState()\n    const [dbList, setDbList] = useState()\n\n\n    const [idMachine, setIdMachine] = useState('kapal-1')\n    const [tanggal, setTanggal] = useState(0)\n    const [bulan, setBulan] = useState(0)\n    const [tahun, setTahun] = useState(0)\n\n    const [graphDate, setGraphDate] = useState(new Date());\n    const [graphSelect, setGraphSelect] = useState(0);\n\n    const handleGraphSelect = (e) => {\n        setGraphSelect(e)\n    }\n\n    const monthText = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n\n    const handleRefresh = () => {\n        //setTanggal(graphDate.getDate())\n        //setBulan(graphDate.getMonth() + 1)\n        //setTahun(graphDate.getFullYear())\n\n        const dbRef = firebase.database().ref('dbrt').child(idMachine).child(2021).child(9).child(graphDate.getDate())\n    \n        dbRef.on('value', (snapshot) => {\n            const db = snapshot.val()\n            const listDb = []\n            //const listDate = []\n            const listTime = []\n            const listPH = []\n\n            for (let id in db) {\n                listDb.push(db[id])\n                //listDate.push(db[id].date)\n                listTime.push(db[id].time)\n                listPH.push(db[id].ph)\n            }\n            setDbList(listDb)\n            setSensorDate(listDate)\n            setSensorTime(listTime)\n            setSensorPH(listPH)\n        })\n        \n\n        console.log(tanggal,bulan,tahun)\n        \n    }\n\n\n\n    return (\n        <div>\n            <Container fluid=\"md\">\n\n                <Row xs={8} md={3} className=\"justify-content-md-center\">\n                    <div className=\"Container\" style={{ textAlign: \"center\" }}>\n                        {graphSelect > 0 ? <h1 className=\"center\">Grafik Bulanan</h1> : <h1 className=\"center\">Grafik Harian</h1>}\n                        {graphSelect > 0\n                            ? <h1 className=\"center\">{`${monthText[graphDate.getMonth()]} ${graphDate.getFullYear()}`}</h1>\n                            : <h1 className=\"center\">{`${tanggal} ${bulan} ${tahun}`}</h1>}\n                    </div>\n                    <InputGroup className=\"mb-3\">\n                        <button type=\"button\" onClick={handleRefresh} className=\"btn btn-primary\">Refresh</button>\n                        <DropdownButton\n                            variant=\"secondary\"\n                            title={graphSelect > 0 ? \"Bulanan\" : \"Harian\"}\n                            id=\"input-group-dropdown-1\"\n                            onSelect={handleGraphSelect}\n                        >\n                            <Dropdown.Item eventKey=\"0\">Harian</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"1\">Bulanan</Dropdown.Item>\n                        </DropdownButton>\n\n                        <DatePicker\n                            onChange={setGraphDate}\n                            value={graphDate}\n                            format=\"d-M-y\"\n                        />\n\n\n\n                    </InputGroup>\n                </Row>\n\n                <Row xs={1} md={1} className=\"g-4 justify-content-md-center\">\n                    <SensorPlot\n                        labelname=\"PH Meter\"\n                        data={sensorPH}\n                        labels={sensorTime}\n                        linecolor='200, 0, 0'\n                    />\n                    <SensorPlot\n                        labelname=\"TDS\"\n                        data={sensorTDS}\n                        labels={sensorTime}\n                        linecolor='100, 76, 102'\n                    />\n                    <SensorPlot\n                        labelname=\"DO\"\n                        data={sensorDO}\n                        labels={sensorTime}\n                        linecolor='3, 6, 202'\n                    />\n                    <SensorPlot\n                        labelname=\"EC\"\n                        data={sensorEC}\n                        labels={sensorTime}\n                        linecolor='205, 120, 62'\n                    />\n                    <SensorPlot\n                        labelname=\"ORP\"\n                        data={sensorORP}\n                        labels={sensorTime}\n                        linecolor='130, 150, 10'\n                    />\n                    <SensorPlot\n                        labelname=\"Temperatur\"\n                        data={sensorTEMP}\n                        labels={sensorTime}\n                        linecolor='3, 76, 102'\n                    />\n                    <SensorPlot\n                        labelname=\"Water Contact\"\n                        data={sensorWC}\n                        labels={sensorTime}\n                        linecolor='20, 153, 23'\n                    />\n                </Row>\n\n            </Container>\n        </div>\n    );\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}