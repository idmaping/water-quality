{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SensorPlot from './component/SensorPlot';\nimport InputDummyDatabase from './component/InputDummyDatabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [sensorDate, setSensorDate] = useState();\n  const [sensorTime, setSensorTime] = useState();\n  const [sensorPH, setSensorPH] = useState();\n  const [sensorTDS, setSensorTDS] = useState();\n  const [sensorDO, setSensorDO] = useState();\n  const [sensorEC, setSensorEC] = useState();\n  const [sensorORC, setSensorORC] = useState();\n  const [sensorTEMP, setSensorTEMP] = useState();\n  const [sensorLon, setSensorLon] = useState();\n  const [sensorLat, setSensorLat] = useState();\n  const [dbList, setDbList] = useState();\n  useEffect(() => {\n    const dbRef = firebase.database().ref('realtime-db');\n    dbRef.on('value', snapshot => {\n      const db = snapshot.val();\n      const listDate = [];\n      const listTime = [];\n      const listPH = [];\n      const listTDS = [];\n      const listDO = [];\n      const listEC = [];\n      const listORC = [];\n      const listTEMP = [];\n      const listLon = [];\n      const listLat = [];\n      const listDb = [];\n\n      for (let id in db) {\n        listDate.push(db[id].date);\n        listTime.push(db[id].time);\n        listPH.push(db[id].ph);\n        listTDS.push(db[id].tds);\n        listDO.push(db[id].do);\n        listEC.push(db[id].ec);\n        listORC.push(db[id].orc);\n        listTEMP.push(db[id].temp);\n        listLon.push(db[id].lon);\n        listLat.push(db[id].lat);\n        listDb.push(db[id]);\n      }\n\n      setSensorDate(listDate);\n      setSensorTime(listTime);\n      setSensorPH(listPH);\n      setSensorTDS(listTDS);\n      setSensorDO(listDO);\n      setSensorEC(listEC);\n      setSensorORC(listORC);\n      setSensorTEMP(listTEMP);\n      setSensorLon(listLon);\n      setSensorLat(listLat);\n      setDbList(listDb);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(SensorPlot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7wHJmNFbEoYoBG78rayjqgu9K/8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/App.js"],"names":["React","SensorPlot","InputDummyDatabase","App","props","sensorDate","setSensorDate","useState","sensorTime","setSensorTime","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORC","setSensorORC","sensorTEMP","setSensorTEMP","sensorLon","setSensorLon","sensorLat","setSensorLat","dbList","setDbList","useEffect","dbRef","firebase","database","ref","on","snapshot","db","val","listDate","listTime","listPH","listTDS","listDO","listEC","listORC","listTEMP","listLon","listLat","listDb","id","push","date","time","ph","tds","do","ec","orc","temp","lon","lat"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SensorPlot from './component/SensorPlot'\nimport InputDummyDatabase from './component/InputDummyDatabase'\n\nfunction App(props) {\n\n  const [sensorDate, setSensorDate] = useState()\n  const [sensorTime, setSensorTime] = useState()\n  const [sensorPH, setSensorPH] = useState()\n  const [sensorTDS, setSensorTDS] = useState()\n  const [sensorDO, setSensorDO] = useState()\n  const [sensorEC, setSensorEC] = useState()\n  const [sensorORC, setSensorORC] = useState()\n  const [sensorTEMP, setSensorTEMP] = useState()\n  const [sensorLon, setSensorLon] = useState()\n  const [sensorLat, setSensorLat] = useState()\n  const [dbList, setDbList] = useState()\n\n  useEffect(() => {\n    const dbRef = firebase.database().ref('realtime-db')\n    dbRef.on('value', (snapshot) => {\n      const db = snapshot.val()\n      const listDate = []\n      const listTime = []\n      const listPH = []\n      const listTDS = []\n      const listDO = []\n      const listEC = []\n      const listORC = []\n      const listTEMP = []\n      const listLon = []\n      const listLat = []\n      const listDb = []\n      for (let id in db) {\n        listDate.push(db[id].date)\n        listTime.push(db[id].time)\n        listPH.push(db[id].ph)\n        listTDS.push(db[id].tds)\n        listDO.push(db[id].do)\n        listEC.push(db[id].ec)\n        listORC.push(db[id].orc)\n        listTEMP.push(db[id].temp)\n        listLon.push(db[id].lon)\n        listLat.push(db[id].lat)\n        listDb.push(db[id])\n      }\n      setSensorDate(listDate)\n      setSensorTime(listTime)\n      setSensorPH(listPH)\n      setSensorTDS(listTDS)\n      setSensorDO(listDO)\n      setSensorEC(listEC)\n      setSensorORC(listORC)\n      setSensorTEMP(listTEMP)\n      setSensorLon(listLon)\n      setSensorLat(listLat)\n      setDbList(listDb)\n\n\n    })\n  }, [])\n\n  return (\n    <div>\n      <div className=\"p-5\">\n        <div className=\"container\">\n          <SensorPlot></SensorPlot>\n        </div>\n      </div>\n\n\n\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}