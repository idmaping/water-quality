{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/component/UploadImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from '../util/firebase';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadImage(props) {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState([]);\n\n  const readImage = async e => {\n    const file = e.target.files[0];\n    const id = uuid();\n    const storageRef = firebase.storage().ref('images').child(id);\n    const imageRef = firebase.database().ref('images').child('daily').child(id);\n    await storageRef.put(file);\n    storageRef.getDownloadURL().then(url => {\n      imageRef.set(url);\n      const newState = [...imageUrl, {\n        id,\n        url\n      }];\n      setImageUrl(newState);\n      log.console(imageUrl);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: readImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadImage, \"5O0k4Ie0wCBslmoPA3mh70EaefQ=\");\n\n_c = UploadImage;\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/component/UploadImage.js"],"names":["React","useState","firebase","v4","uuid","UploadImage","props","imageUrl","setImageUrl","readImage","e","file","target","files","id","storageRef","storage","ref","child","imageRef","database","put","getDownloadURL","then","url","set","newState","log","console"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMQ,SAAS,GAAG,MAAMC,CAAN,IAAY;AAC1B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,EAAE,GAAGV,IAAI,EAAf;AACA,UAAMW,UAAU,GAAGb,QAAQ,CAACc,OAAT,GAAmBC,GAAnB,CAAuB,QAAvB,EAAiCC,KAAjC,CAAuCJ,EAAvC,CAAnB;AACA,UAAMK,QAAQ,GAAGjB,QAAQ,CAACkB,QAAT,GAAoBH,GAApB,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwC,OAAxC,EAAiDA,KAAjD,CAAuDJ,EAAvD,CAAjB;AACA,UAAMC,UAAU,CAACM,GAAX,CAAeV,IAAf,CAAN;AACAI,IAAAA,UAAU,CAACO,cAAX,GAA4BC,IAA5B,CAAkCC,GAAD,IAAS;AACtCL,MAAAA,QAAQ,CAACM,GAAT,CAAaD,GAAb;AACA,YAAME,QAAQ,GAAG,CAAC,GAAGnB,QAAJ,EAAa;AAACO,QAAAA,EAAD;AAAKU,QAAAA;AAAL,OAAb,CAAjB;AACAhB,MAAAA,WAAW,CAACkB,QAAD,CAAX;AACAC,MAAAA,GAAG,CAACC,OAAJ,CAAYrB,QAAZ;AACH,KALD;AAMH,GAZD;;AAcA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,MAAM,EAAC,SAA1B;AAAoC,MAAA,QAAQ,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAvBQJ,W;;KAAAA,W;AAyBT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport firebase from '../util/firebase'\nimport {v4 as uuid} from 'uuid'\n\nfunction UploadImage(props) {\n    const [imageUrl,setImageUrl] = useState([])\n\n    const readImage = async(e) => {\n        const file = e.target.files[0]\n        const id = uuid()\n        const storageRef = firebase.storage().ref('images').child(id)\n        const imageRef = firebase.database().ref('images').child('daily').child(id)\n        await storageRef.put(file)\n        storageRef.getDownloadURL().then((url) => {\n            imageRef.set(url)\n            const newState = [...imageUrl,{id, url}]\n            setImageUrl(newState)\n            log.console(imageUrl)\n        })\n    }\n\n    return (\n        <div>\n            <h1>Upload Image</h1>\n            <input type=\"file\" accept=\"image/*\" onChange={readImage}></input>\n        </div>\n    );\n}\n\nexport default UploadImage;"]},"metadata":{},"sourceType":"module"}