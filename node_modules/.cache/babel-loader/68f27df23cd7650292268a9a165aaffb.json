{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/component/InputDummyDatabase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from '../util/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [sensorDate, setSensorDate] = useState('');\n  const [sensorTime, setSensorTime] = useState('');\n  const [sensorPH, setSensorPH] = useState('');\n  const [sensorTDS, setSensorTDS] = useState('');\n  const [sensorDO, setSensorDO] = useState('');\n  const [sensorEC, setSensorEC] = useState('');\n  const [sensorORC, setSensorORC] = useState('');\n  const [sensorTEMP, setSensorTEMP] = useState('');\n\n  const handleOnClick = () => {\n    //bagian ini untuk update\n    const kirimRef = firebase.database().ref(\"realtime-db\");\n    const data = {\n      time: sensorTime,\n      date: sensorDate,\n      ph: sensorPH,\n      tds: sensorTDS,\n      do: sensorDO,\n      ec: sensorEC,\n      orc: sensorORC,\n      temp: sensorTEMP,\n      long: 0,\n      lat: 0\n    };\n    kirimRef.push(data); //=======================\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: sensorTime,\n      onChange: e => setSensorTime(e.target.value),\n      placeholder: \"time jj.mm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: sensorDate,\n      onChange: e => setSensorDate(e.target.value),\n      placeholder: \"date dd/mm/yyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorPH,\n      onChange: e => setSensorPH(e.target.value),\n      placeholder: \"Sensor PH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorTDS,\n      onChange: e => setSensorTDS(e.target.value),\n      placeholder: \"Sensor TDS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorDO,\n      onChange: e => setSensorDO(e.target.value),\n      placeholder: \"Sensor DO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorEC,\n      onChange: e => setSensorEC(e.target.value),\n      placeholder: \"Sensor EC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorORC,\n      onChange: e => setSensorORC(e.target.value),\n      placeholder: \"Sensor ORC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorTEMP,\n      onChange: e => setSensorTEMP(e.target.value),\n      placeholder: \"Sensor TEMP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnClick,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"hMwAd+3Hv+OO9gUgCNtrcTOzAhI=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/component/InputDummyDatabase.js"],"names":["React","useState","firebase","Form","props","sensorDate","setSensorDate","sensorTime","setSensorTime","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORC","setSensorORC","sensorTEMP","setSensorTEMP","handleOnClick","kirimRef","database","ref","data","time","date","ph","tds","do","ec","orc","temp","long","lat","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport firebase from '../util/firebase';\n\n\n\nfunction Form(props) {\n\n    const [sensorDate,    setSensorDate]   = useState('')\n    const [sensorTime,    setSensorTime]   = useState('')\n    const [sensorPH,    setSensorPH]   = useState('')\n    const [sensorTDS,   setSensorTDS]  = useState('')\n    const [sensorDO,    setSensorDO]   = useState('')\n    const [sensorEC,    setSensorEC]   = useState('')\n    const [sensorORC,   setSensorORC]  = useState('')\n    const [sensorTEMP,  setSensorTEMP] = useState('')\n\n\n    const handleOnClick = () => {\n        //bagian ini untuk update\n        const kirimRef = firebase.database().ref(\"realtime-db\")\n        const data  = {\n            time:sensorTime,\n            date:sensorDate,\n            ph:sensorPH,\n            tds:sensorTDS,\n            do:sensorDO,\n            ec:sensorEC,\n            orc:sensorORC,\n            temp:sensorTEMP,\n            long:0,\n            lat:0,\n        }\n        kirimRef.push(data)\n        //=======================\n    }\n    \n\n    return (\n        <div>\n            <input type=\"text\" value={sensorTime} onChange={(e) => setSensorTime(e.target.value)} placeholder=\"time jj.mm\"/>\n            <input type=\"text\" value={sensorDate} onChange={(e) => setSensorDate(e.target.value)} placeholder=\"date dd/mm/yyyy\"/>\n            <input type=\"number\" value={sensorPH} onChange={(e) => setSensorPH(e.target.value)} placeholder=\"Sensor PH\"/>\n            <input type=\"number\" value={sensorTDS} onChange={(e) => setSensorTDS(e.target.value)} placeholder=\"Sensor TDS\"/>\n            <input type=\"number\" value={sensorDO} onChange={(e) => setSensorDO(e.target.value)} placeholder=\"Sensor DO\"/>\n            <input type=\"number\" value={sensorEC} onChange={(e) => setSensorEC(e.target.value)} placeholder=\"Sensor EC\"/>\n            <input type=\"number\" value={sensorORC} onChange={(e) => setSensorORC(e.target.value)} placeholder=\"Sensor ORC\"/>\n            <input type=\"number\" value={sensorTEMP} onChange={(e) => setSensorTEMP(e.target.value)} placeholder=\"Sensor TEMP\"/>\n\n            <button onClick={handleOnClick}>ADD</button>\n        </div>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}