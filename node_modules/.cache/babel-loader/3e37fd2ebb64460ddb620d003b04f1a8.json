{"ast":null,"code":"import _slicedToArray from\"/media/spektrum/Data/Projek/sambigede/sambigede/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import firebase from'../util/firebase';import SensorPlot from'../component/SensorPlot';import{Row,Col,Container,InputGroup,DropdownButton,Dropdown,FormControl}from'react-bootstrap';import Form from'react-bootstrap/Form';import DatePicker from'react-date-picker';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Graph(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),sensorDate=_useState2[0],setSensorDate=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),sensorTime=_useState4[0],setSensorTime=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),sensorPH=_useState6[0],setSensorPH=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),sensorTDS=_useState8[0],setSensorTDS=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),sensorDO=_useState10[0],setSensorDO=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),sensorEC=_useState12[0],setSensorEC=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),sensorORP=_useState14[0],setSensorORP=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),sensorTEMP=_useState16[0],setSensorTEMP=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),sensorLon=_useState18[0],setSensorLon=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),sensorLat=_useState20[0],setSensorLat=_useState20[1];var _useState21=useState(),_useState22=_slicedToArray(_useState21,2),sensorWC=_useState22[0],setSensorWC=_useState22[1];var _useState23=useState(),_useState24=_slicedToArray(_useState23,2),dbList=_useState24[0],setDbList=_useState24[1];var _useState25=useState(new Date()),_useState26=_slicedToArray(_useState25,2),graphDate=_useState26[0],setGraphDate=_useState26[1];var _useState27=useState(0),_useState28=_slicedToArray(_useState27,2),graphSelect=_useState28[0],setGraphSelect=_useState28[1];var handleGraphSelect=function handleGraphSelect(e){setGraphSelect(e);};var monthText=[\"Januari\",\"Februari\",\"Maret\",\"April\",\"Mei\",\"Juni\",\"Juli\",\"Agustus\",\"September\",\"Oktober\",\"November\",\"Desember\"];var handleLog=function handleLog(){console.log(graphDate);//getDate\n//getMonth\n//getFullYear\n};useEffect(function(){var dbRef=firebase.database().ref('realtime-db/2021/09/08');dbRef.on('value',function(snapshot){var db=snapshot.val();var listDate=[];var listTime=[];var listPH=[];var listTDS=[];var listDO=[];var listEC=[];var listORP=[];var listTEMP=[];var listLon=[];var listLat=[];var listDb=[];var listWC=[];for(var id in db){listDate.push(db[id].date);listTime.push(db[id].time);listPH.push(db[id].ph);listTDS.push(db[id].tds);listDO.push(db[id].do);listEC.push(db[id].ec);listORP.push(db[id].orp);listTEMP.push(db[id].temp);listLon.push(db[id].lon);listLat.push(db[id].lat);listDb.push(db[id]);listWC.push(db[id].wc);}setSensorDate(listDate);setSensorTime(listTime);setSensorPH(listPH);setSensorTDS(listTDS);setSensorDO(listDO);setSensorEC(listEC);setSensorORP(listORP);setSensorTEMP(listTEMP);setSensorLon(listLon);setSensorLat(listLat);setSensorWC(listWC);setDbList(listDb);});},[]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Container,{fluid:\"md\",children:[/*#__PURE__*/_jsxs(Row,{xs:8,md:3,className:\"justify-content-md-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Container\",style:{textAlign:\"center\"},children:[graphSelect>0?/*#__PURE__*/_jsx(\"h1\",{className:\"center\",children:\"Grafik Bulanan\"}):/*#__PURE__*/_jsx(\"h1\",{className:\"center\",children:\"Grafik Harian\"}),graphSelect>0?/*#__PURE__*/_jsx(\"h1\",{className:\"center\",children:\"\".concat(monthText[graphDate.getMonth()],\" \").concat(graphDate.getFullYear())}):/*#__PURE__*/_jsx(\"h1\",{className:\"center\",children:\"\".concat(graphDate.getDate(),\" \").concat(monthText[graphDate.getMonth()],\" \").concat(graphDate.getFullYear())})]}),/*#__PURE__*/_jsxs(InputGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(DropdownButton,{variant:\"secondary\",title:graphSelect>0?\"Bulanan\":\"Harian\",id:\"input-group-dropdown-1\",onSelect:handleGraphSelect,children:[/*#__PURE__*/_jsx(Dropdown.Item,{eventKey:\"0\",children:\"Harian\"}),/*#__PURE__*/_jsx(Dropdown.Item,{eventKey:\"1\",children:\"Bulanan\"})]}),/*#__PURE__*/_jsx(DatePicker,{onChange:setGraphDate,value:graphDate})]})]}),/*#__PURE__*/_jsxs(Row,{xs:1,md:1,className:\"g-4 justify-content-md-center\",children:[/*#__PURE__*/_jsx(SensorPlot,{labelname:\"PH Meter\",data:sensorPH,labels:sensorTime,linecolor:\"200, 0, 0\"}),/*#__PURE__*/_jsx(SensorPlot,{labelname:\"TDS\",data:sensorTDS,labels:sensorTime,linecolor:\"100, 76, 102\"}),/*#__PURE__*/_jsx(SensorPlot,{labelname:\"DO\",data:sensorDO,labels:sensorTime,linecolor:\"3, 6, 202\"}),/*#__PURE__*/_jsx(SensorPlot,{labelname:\"EC\",data:sensorEC,labels:sensorTime,linecolor:\"205, 120, 62\"}),/*#__PURE__*/_jsx(SensorPlot,{labelname:\"ORP\",data:sensorORP,labels:sensorTime,linecolor:\"130, 150, 10\"}),/*#__PURE__*/_jsx(SensorPlot,{labelname:\"Temperatur\",data:sensorTEMP,labels:sensorTime,linecolor:\"3, 76, 102\"}),/*#__PURE__*/_jsx(SensorPlot,{labelname:\"Water Contact\",data:sensorWC,labels:sensorTime,linecolor:\"20, 153, 23\"})]})]})});}export default Graph;","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js"],"names":["React","useEffect","useState","firebase","SensorPlot","Row","Col","Container","InputGroup","DropdownButton","Dropdown","FormControl","Form","DatePicker","Graph","props","sensorDate","setSensorDate","sensorTime","setSensorTime","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORP","setSensorORP","sensorTEMP","setSensorTEMP","sensorLon","setSensorLon","sensorLat","setSensorLat","sensorWC","setSensorWC","dbList","setDbList","Date","graphDate","setGraphDate","graphSelect","setGraphSelect","handleGraphSelect","e","monthText","handleLog","console","log","dbRef","database","ref","on","snapshot","db","val","listDate","listTime","listPH","listTDS","listDO","listEC","listORP","listTEMP","listLon","listLat","listDb","listWC","id","push","date","time","ph","tds","do","ec","orp","temp","lon","lat","wc","textAlign","getMonth","getFullYear","getDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase'\nimport SensorPlot from '../component/SensorPlot'\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown, FormControl } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form'\nimport DatePicker from 'react-date-picker';\n\nfunction Graph(props) {\n\n    const [sensorDate, setSensorDate] = useState()\n    const [sensorTime, setSensorTime] = useState()\n    const [sensorPH, setSensorPH] = useState()\n    const [sensorTDS, setSensorTDS] = useState()\n    const [sensorDO, setSensorDO] = useState()\n    const [sensorEC, setSensorEC] = useState()\n    const [sensorORP, setSensorORP] = useState()\n    const [sensorTEMP, setSensorTEMP] = useState()\n    const [sensorLon, setSensorLon] = useState()\n    const [sensorLat, setSensorLat] = useState()\n    const [sensorWC, setSensorWC] = useState()\n    const [dbList, setDbList] = useState()\n\n    const [graphDate, setGraphDate] = useState(new Date());\n    const [graphSelect, setGraphSelect] = useState(0);\n    const handleGraphSelect = (e) => {\n        setGraphSelect(e)\n    }\n    const monthText = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n    const handleLog = () => {\n        console.log(graphDate);\n        //getDate\n        //getMonth\n        //getFullYear\n    }\n\n    useEffect(() => {\n        const dbRef = firebase.database().ref('realtime-db/2021/09/08')\n        dbRef.on('value', (snapshot) => {\n            const db = snapshot.val()\n            const listDate = []\n            const listTime = []\n            const listPH = []\n            const listTDS = []\n            const listDO = []\n            const listEC = []\n            const listORP = []\n            const listTEMP = []\n            const listLon = []\n            const listLat = []\n            const listDb = []\n            const listWC = []\n            for (let id in db) {\n                listDate.push(db[id].date)\n                listTime.push(db[id].time)\n                listPH.push(db[id].ph)\n                listTDS.push(db[id].tds)\n                listDO.push(db[id].do)\n                listEC.push(db[id].ec)\n                listORP.push(db[id].orp)\n                listTEMP.push(db[id].temp)\n                listLon.push(db[id].lon)\n                listLat.push(db[id].lat)\n                listDb.push(db[id])\n                listWC.push(db[id].wc)\n            }\n            setSensorDate(listDate)\n            setSensorTime(listTime)\n            setSensorPH(listPH)\n            setSensorTDS(listTDS)\n            setSensorDO(listDO)\n            setSensorEC(listEC)\n            setSensorORP(listORP)\n            setSensorTEMP(listTEMP)\n            setSensorLon(listLon)\n            setSensorLat(listLat)\n            setSensorWC(listWC)\n            setDbList(listDb)\n        })\n    }, [])\n\n    return (\n        <div>\n            <Container fluid=\"md\">\n\n                <Row xs={8} md={3} className=\"justify-content-md-center\">\n                    <div className=\"Container\" style={{ textAlign: \"center\" }}>\n                        {graphSelect>0?<h1 className=\"center\">Grafik Bulanan</h1>:<h1 className=\"center\">Grafik Harian</h1>}\n                        {graphSelect>0\n                        ?<h1 className=\"center\">{`${monthText[graphDate.getMonth()]} ${graphDate.getFullYear()}`}</h1>\n                        :<h1 className=\"center\">{`${graphDate.getDate()} ${monthText[graphDate.getMonth()]} ${graphDate.getFullYear()}`}</h1>}\n                    </div>\n                    <InputGroup className=\"mb-3\">\n                        <DropdownButton\n                            variant=\"secondary\"\n                            title={graphSelect > 0 ? \"Bulanan\" : \"Harian\"}\n                            id=\"input-group-dropdown-1\"\n                            onSelect={handleGraphSelect}\n                        >\n                            <Dropdown.Item eventKey=\"0\">Harian</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"1\">Bulanan</Dropdown.Item>\n                        </DropdownButton>\n\n                        <DatePicker\n                            onChange={setGraphDate}\n                            value={graphDate}\n                        />\n                    </InputGroup>\n                </Row>\n\n                <Row xs={1} md={1} className=\"g-4 justify-content-md-center\">\n                    <SensorPlot\n                        labelname=\"PH Meter\"\n                        data={sensorPH}\n                        labels={sensorTime}\n                        linecolor='200, 0, 0'\n                    />\n                    <SensorPlot\n                        labelname=\"TDS\"\n                        data={sensorTDS}\n                        labels={sensorTime}\n                        linecolor='100, 76, 102'\n                    />\n                    <SensorPlot\n                        labelname=\"DO\"\n                        data={sensorDO}\n                        labels={sensorTime}\n                        linecolor='3, 6, 202'\n                    />\n                    <SensorPlot\n                        labelname=\"EC\"\n                        data={sensorEC}\n                        labels={sensorTime}\n                        linecolor='205, 120, 62'\n                    />\n                    <SensorPlot\n                        labelname=\"ORP\"\n                        data={sensorORP}\n                        labels={sensorTime}\n                        linecolor='130, 150, 10'\n                    />\n                    <SensorPlot\n                        labelname=\"Temperatur\"\n                        data={sensorTEMP}\n                        labels={sensorTime}\n                        linecolor='3, 76, 102'\n                    />\n                    <SensorPlot\n                        labelname=\"Water Contact\"\n                        data={sensorWC}\n                        labels={sensorTime}\n                        linecolor='20, 153, 23'\n                    />\n                </Row>\n\n            </Container>\n        </div>\n    );\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}