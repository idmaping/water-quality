{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase';\nimport SensorPlot from '../component/SensorPlot';\nimport { Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph(props) {\n  _s();\n\n  const [sensorDate, setSensorDate] = useState();\n  const [sensorTime, setSensorTime] = useState();\n  const [sensorPH, setSensorPH] = useState();\n  const [sensorTDS, setSensorTDS] = useState();\n  const [sensorDO, setSensorDO] = useState();\n  const [sensorEC, setSensorEC] = useState();\n  const [sensorORP, setSensorORP] = useState();\n  const [sensorTEMP, setSensorTEMP] = useState();\n  const [sensorLon, setSensorLon] = useState();\n  const [sensorLat, setSensorLat] = useState();\n  const [sensorWC, setSensorWC] = useState();\n  const [dbList, setDbList] = useState();\n  useEffect(() => {\n    const dbRef = firebase.database().ref('realtime-db/2021/09/08');\n    dbRef.on('value', snapshot => {\n      const db = snapshot.val();\n      const listDate = [];\n      const listTime = [];\n      const listPH = [];\n      const listTDS = [];\n      const listDO = [];\n      const listEC = [];\n      const listORP = [];\n      const listTEMP = [];\n      const listLon = [];\n      const listLat = [];\n      const listDb = [];\n      const listWC = [];\n\n      for (let id in db) {\n        listDate.push(db[id].date);\n        listTime.push(db[id].time);\n        listPH.push(db[id].ph);\n        listTDS.push(db[id].tds);\n        listDO.push(db[id].do);\n        listEC.push(db[id].ec);\n        listORP.push(db[id].orp);\n        listTEMP.push(db[id].temp);\n        listLon.push(db[id].lon);\n        listLat.push(db[id].lat);\n        listDb.push(db[id]);\n        listWC.push(db[id].wc);\n      }\n\n      setSensorDate(listDate);\n      setSensorTime(listTime);\n      setSensorPH(listPH);\n      setSensorTDS(listTDS);\n      setSensorDO(listDO);\n      setSensorEC(listEC);\n      setSensorORP(listORP);\n      setSensorTEMP(listTEMP);\n      setSensorLon(listLon);\n      setSensorLat(listLat);\n      setSensorWC(listWC);\n      setDbList(listDb);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 1,\n          className: \"g-4 justify-content-md-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            children: \"Primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            children: \"Primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 1,\n          className: \"g-4 justify-content-md-center\",\n          children: [/*#__PURE__*/_jsxDEV(SensorPlot, {\n            labelname: \"PH Meter\",\n            data: sensorPH,\n            labels: sensorTime,\n            linecolor: \"200, 0, 0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n            labelname: \"TDS\",\n            data: sensorTDS,\n            labels: sensorTime,\n            linecolor: \"100, 76, 102\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n            labelname: \"DO\",\n            data: sensorDO,\n            labels: sensorTime,\n            linecolor: \"3, 6, 202\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n            labelname: \"EC\",\n            data: sensorEC,\n            labels: sensorTime,\n            linecolor: \"205, 120, 62\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n            labelname: \"ORP\",\n            data: sensorORP,\n            labels: sensorTime,\n            linecolor: \"130, 150, 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n            labelname: \"Temperatur\",\n            data: sensorTEMP,\n            labels: sensorTime,\n            linecolor: \"3, 76, 102\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n            labelname: \"Water Contact\",\n            data: sensorWC,\n            labels: sensorTime,\n            linecolor: \"80, 73, 108\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graph, \"VfsFgB4YCglyBmgiYjtAB67hOO0=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js"],"names":["React","useEffect","useState","firebase","SensorPlot","Row","Col","Graph","props","sensorDate","setSensorDate","sensorTime","setSensorTime","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORP","setSensorORP","sensorTEMP","setSensorTEMP","sensorLon","setSensorLon","sensorLat","setSensorLat","sensorWC","setSensorWC","dbList","setDbList","dbRef","database","ref","on","snapshot","db","val","listDate","listTime","listPH","listTDS","listDO","listEC","listORP","listTEMP","listLon","listLat","listDb","listWC","id","push","date","time","ph","tds","do","ec","orp","temp","lon","lat","wc"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase'\nimport SensorPlot from '../component/SensorPlot'\nimport { Row, Col } from 'react-bootstrap';\n\nfunction Graph(props) {\n\n    const [sensorDate, setSensorDate] = useState()\n    const [sensorTime, setSensorTime] = useState()\n    const [sensorPH, setSensorPH] = useState()\n    const [sensorTDS, setSensorTDS] = useState()\n    const [sensorDO, setSensorDO] = useState()\n    const [sensorEC, setSensorEC] = useState()\n    const [sensorORP, setSensorORP] = useState()\n    const [sensorTEMP, setSensorTEMP] = useState()\n    const [sensorLon, setSensorLon] = useState()\n    const [sensorLat, setSensorLat] = useState()\n    const [sensorWC, setSensorWC] = useState()\n    const [dbList, setDbList] = useState()\n\n    useEffect(() => {\n        const dbRef = firebase.database().ref('realtime-db/2021/09/08')\n        dbRef.on('value', (snapshot) => {\n            const db = snapshot.val()\n            const listDate = []\n            const listTime = []\n            const listPH = []\n            const listTDS = []\n            const listDO = []\n            const listEC = []\n            const listORP = []\n            const listTEMP = []\n            const listLon = []\n            const listLat = []\n            const listDb = []\n            const listWC = []\n            for (let id in db) {\n                listDate.push(db[id].date)\n                listTime.push(db[id].time)\n                listPH.push(db[id].ph)\n                listTDS.push(db[id].tds)\n                listDO.push(db[id].do)\n                listEC.push(db[id].ec)\n                listORP.push(db[id].orp)\n                listTEMP.push(db[id].temp)\n                listLon.push(db[id].lon)\n                listLat.push(db[id].lat)\n                listDb.push(db[id])\n                listWC.push(db[id].wc)\n            }\n            setSensorDate(listDate)\n            setSensorTime(listTime)\n            setSensorPH(listPH)\n            setSensorTDS(listTDS)\n            setSensorDO(listDO)\n            setSensorEC(listEC)\n            setSensorORP(listORP)\n            setSensorTEMP(listTEMP)\n            setSensorLon(listLon)\n            setSensorLat(listLat)\n            setSensorWC(listWC)\n            setDbList(listDb)\n        })\n    }, [])\n\n    return (\n        <div>\n            <div className=\"p-5\">\n                <div className=\"container\">\n                    <Row xs={1} md={1} className=\"g-4 justify-content-md-center\">\n                    <button type=\"button\" class=\"btn btn-primary\">Primary</button>\n                    <button type=\"button\" class=\"btn btn-primary\">Primary</button>\n                    </Row>\n\n                    <Row xs={1} md={1} className=\"g-4 justify-content-md-center\">\n                        <SensorPlot\n                            labelname=\"PH Meter\"\n                            data={sensorPH}\n                            labels={sensorTime}\n                            linecolor='200, 0, 0'\n                        />\n                        <SensorPlot\n                            labelname=\"TDS\"\n                            data={sensorTDS}\n                            labels={sensorTime}\n                            linecolor='100, 76, 102'\n                        />\n                        <SensorPlot\n                            labelname=\"DO\"\n                            data={sensorDO}\n                            labels={sensorTime}\n                            linecolor='3, 6, 202'\n                        />\n                        <SensorPlot\n                            labelname=\"EC\"\n                            data={sensorEC}\n                            labels={sensorTime}\n                            linecolor='205, 120, 62'\n                        />\n                        <SensorPlot\n                            labelname=\"ORP\"\n                            data={sensorORP}\n                            labels={sensorTime}\n                            linecolor='130, 150, 10'\n                        />\n                        <SensorPlot\n                            labelname=\"Temperatur\"\n                            data={sensorTEMP}\n                            labels={sensorTime}\n                            linecolor='3, 76, 102'\n                        />\n                        <SensorPlot\n                            labelname=\"Water Contact\"\n                            data={sensorWC}\n                            labels={sensorTime}\n                            linecolor='80, 73, 108'\n                        />\n                    </Row>\n\n\n\n\n\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}