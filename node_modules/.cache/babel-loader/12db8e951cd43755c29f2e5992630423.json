{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/component/SensorPlot.js\";\nimport React from 'react';\nimport CanvasJSReact from '../canvasjs.react'; //var CanvasJSReact = require('./canvasjs.react');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nfunction GraphPlot(props) {\n  const options = {\n    title: {\n      text: \"basic Chart\"\n    },\n    data: [{\n      type: \"coloumn\",\n      dataPoints: [{\n        label: \"Apple\",\n        y: 10\n      }, {\n        label: \"Orange\",\n        y: 15\n      }, {\n        label: \"Banana\",\n        y: 25\n      }, {\n        label: \"Mango\",\n        y: 30\n      }, {\n        label: \"Grape\",\n        y: 28\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      options: options\n      /* onRef = {ref => this.chart = ref} */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = GraphPlot;\nexport default GraphPlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphPlot\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/component/SensorPlot.js"],"names":["React","CanvasJSReact","CanvasJS","CanvasJSChart","GraphPlot","props","options","title","text","data","type","dataPoints","label","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,aAAP,MAA0B,mBAA1B,C,CACA;;;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;;AAKA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,QAAMC,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE;AADH,KADK;AAIZC,IAAAA,IAAI,EAAE,CAAC;AACHC,MAAAA,IAAI,EAAE,SADH;AAEHC,MAAAA,UAAU,EAAE,CACR;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAmBC,QAAAA,CAAC,EAAE;AAAtB,OADQ,EAER;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,CAAC,EAAE;AAAtB,OAFQ,EAGR;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,CAAC,EAAE;AAAtB,OAHQ,EAIR;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAmBC,QAAAA,CAAC,EAAE;AAAtB,OAJQ,EAKR;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAmBC,QAAAA,CAAC,EAAE;AAAtB,OALQ;AAFT,KAAD;AAJM,GAAhB;AAgBA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,OAAO,EAAIP;AAC1B;;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KAxBQF,S;AA0BT,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\n\nimport CanvasJSReact from '../canvasjs.react';\n//var CanvasJSReact = require('./canvasjs.react');\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n\n\n\nfunction GraphPlot(props) {\n    const options = {\n        title: {\n            text: \"basic Chart\"\n        },\n        data: [{\n            type: \"coloumn\",\n            dataPoints: [\n                { label: \"Apple\",  y: 10  },\n                { label: \"Orange\", y: 15  },\n                { label: \"Banana\", y: 25  },\n                { label: \"Mango\",  y: 30  },\n                { label: \"Grape\",  y: 28  }\n            ]\n        }]\n    }\n    \n    return (\n        <div>\n            <CanvasJSChart options = {options}\n            /* onRef = {ref => this.chart = ref} */\n            />\n        </div>\n    );\n}\n\nexport default GraphPlot;"]},"metadata":{},"sourceType":"module"}