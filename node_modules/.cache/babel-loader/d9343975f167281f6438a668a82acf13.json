{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/component/SensorPlot.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport firebase from '../util/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphPlot(props) {\n  const data = {\n    labels: props.labels,\n    datasets: [{\n      label: props.labelname,\n      data: props.data,\n      fill: false,\n      //backgroundColor: 'rgb(75, 192, 192)',\n      backgroundColor: `rgb(${props.linecolor})`,\n      borderColor: `rgb(${props.linecolor},0.5)`,\n      //borderColor: 'rgba(75, 192, 192, 0.7)',\n      borderWidth: 5,\n      pointStyle: 'circle',\n      pointRadius: 3,\n      tension: 0.1\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_c = GraphPlot;\nexport default GraphPlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphPlot\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/component/SensorPlot.js"],"names":["React","useEffect","useState","Line","firebase","GraphPlot","props","data","labels","datasets","label","labelname","fill","backgroundColor","linecolor","borderColor","borderWidth","pointStyle","pointRadius","tension","options","scales","yAxes","ticks","beginAtZero"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAEtB,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MADL;AAETC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,SADf;AAEEJ,MAAAA,IAAI,EAAED,KAAK,CAACC,IAFd;AAGEK,MAAAA,IAAI,EAAE,KAHR;AAIE;AACAC,MAAAA,eAAe,EAAG,OAAMP,KAAK,CAACQ,SAAU,GAL1C;AAMEC,MAAAA,WAAW,EAAG,OAAMT,KAAK,CAACQ,SAAU,OANtC;AAQE;AACAE,MAAAA,WAAW,EAAC,CATd;AAUEC,MAAAA,UAAU,EAAE,QAVd;AAWEC,MAAAA,WAAW,EAAE,CAXf;AAYEC,MAAAA,OAAO,EAAE;AAZX,KADQ;AAFD,GAAb;AAoBA,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AADR;AADT,OADK;AADD;AADI,GAAhB;AAcA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEjB,IAAZ;AAAkB,MAAA,OAAO,EAAEa;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAzCQf,S;AA2CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport firebase from '../util/firebase'\n\nfunction GraphPlot(props) {\n    \n    const data = {\n        labels: props.labels,\n        datasets: [\n          {\n            label: props.labelname,\n            data: props.data,\n            fill: false,\n            //backgroundColor: 'rgb(75, 192, 192)',\n            backgroundColor: `rgb(${props.linecolor})`,\n            borderColor: `rgb(${props.linecolor},0.5)`,\n\n            //borderColor: 'rgba(75, 192, 192, 0.7)',\n            borderWidth:5,\n            pointStyle: 'circle',\n            pointRadius: 3,\n            tension: 0.1,\n          },\n        ],\n      }\n      \n    const options = {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          ],\n        },\n      }\n    \n\n\n    return (\n        <div>\n            <Line data={data} options={options} />\n        </div>\n    );\n}\n\nexport default GraphPlot;"]},"metadata":{},"sourceType":"module"}