{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/component/InputDummyDatabase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from '../util/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [sensorPH, setSensorPH] = useState('');\n  const [sensorTDS, setSensorTDS] = useState('');\n  const [sensorDO, setSensorDO] = useState('');\n  const [sensorEC, setSensorEC] = useState('');\n  const [sensorORC, setSensorORC] = useState('');\n  const [sensorTEMP, setSensorTEMP] = useState('');\n\n  const handleOnChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleOnClick = () => {\n    //bagian ini untuk update\n    const todoRef = firebase.database().ref(\"Todo\");\n    const todo = {\n      title,\n      complete: false\n    };\n    todoRef.push(todo); //=======================\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorPH,\n      onChange: e => setSensorPH(e.target.value),\n      placeholder: \"SensorPH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorPH,\n      onChange: e => setSensorPH(e.target.value),\n      placeholder: \"SensorPH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorPH,\n      onChange: e => setSensorPH(e.target.value),\n      placeholder: \"SensorPH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorPH,\n      onChange: e => setSensorPH(e.target.value),\n      placeholder: \"SensorPH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorPH,\n      onChange: e => setSensorPH(e.target.value),\n      placeholder: \"SensorPH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sensorPH,\n      onChange: e => setSensorPH(e.target.value),\n      placeholder: \"SensorPH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnClick,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"9EzFdxgLGgNYWzpCxLOryxpnz+0=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/component/InputDummyDatabase.js"],"names":["React","useState","firebase","Form","props","title","setTitle","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORC","setSensorORC","sensorTEMP","setSensorTEMP","handleOnChange","e","target","value","handleOnClick","todoRef","database","ref","todo","complete","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport firebase from '../util/firebase';\n\n\n\nfunction Form(props) {\n    const [title,setTitle] = useState('')\n\n    const [sensorPH,    setSensorPH]   = useState('')\n    const [sensorTDS,   setSensorTDS]  = useState('')\n    const [sensorDO,    setSensorDO]   = useState('')\n    const [sensorEC,    setSensorEC]   = useState('')\n    const [sensorORC,   setSensorORC]  = useState('')\n    const [sensorTEMP,  setSensorTEMP] = useState('')\n\n    const handleOnChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const handleOnClick = () => {\n        //bagian ini untuk update\n        const todoRef = firebase.database().ref(\"Todo\")\n        const todo  = {\n            title,\n            complete: false,\n        }\n        todoRef.push(todo)\n        //=======================\n    }\n    \n   \n\n    return (\n        <div>\n            <input type=\"number\" value={sensorPH} onChange={(e) => setSensorPH(e.target.value)} placeholder=\"SensorPH\"/>\n            <input type=\"number\" value={sensorPH} onChange={(e) => setSensorPH(e.target.value)} placeholder=\"SensorPH\"/>\n            <input type=\"number\" value={sensorPH} onChange={(e) => setSensorPH(e.target.value)} placeholder=\"SensorPH\"/>\n            <input type=\"number\" value={sensorPH} onChange={(e) => setSensorPH(e.target.value)} placeholder=\"SensorPH\"/>\n            <input type=\"number\" value={sensorPH} onChange={(e) => setSensorPH(e.target.value)} placeholder=\"SensorPH\"/>\n            <input type=\"number\" value={sensorPH} onChange={(e) => setSensorPH(e.target.value)} placeholder=\"SensorPH\"/>\n\n            <button onClick={handleOnClick}>ADD</button>\n        </div>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}