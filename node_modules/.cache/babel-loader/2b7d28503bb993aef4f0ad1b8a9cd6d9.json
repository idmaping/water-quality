{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase';\nimport SensorPlot from '../component/SensorPlot';\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown, FormControl } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport DatePicker from 'react-date-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph(props) {\n  _s();\n\n  const [sensorDate, setSensorDate] = useState();\n  const [sensorTime, setSensorTime] = useState();\n  const [sensorPH, setSensorPH] = useState();\n  const [sensorTDS, setSensorTDS] = useState();\n  const [sensorDO, setSensorDO] = useState();\n  const [sensorEC, setSensorEC] = useState();\n  const [sensorORP, setSensorORP] = useState();\n  const [sensorTEMP, setSensorTEMP] = useState();\n  const [sensorLon, setSensorLon] = useState();\n  const [sensorLat, setSensorLat] = useState();\n  const [sensorWC, setSensorWC] = useState();\n  const [dbList, setDbList] = useState();\n  const [graphDate, setGraphDate] = useState(new Date());\n  const [graphSelect, setGraphSelect] = useState(0);\n\n  const handleGraphSelect = e => {\n    setGraphSelect(e);\n  };\n\n  const handleLog = () => {\n    console.log(graphDate);\n  };\n\n  useEffect(() => {\n    const dbRef = firebase.database().ref('realtime-db/2021/09/08');\n    dbRef.on('value', snapshot => {\n      const db = snapshot.val();\n      const listDate = [];\n      const listTime = [];\n      const listPH = [];\n      const listTDS = [];\n      const listDO = [];\n      const listEC = [];\n      const listORP = [];\n      const listTEMP = [];\n      const listLon = [];\n      const listLat = [];\n      const listDb = [];\n      const listWC = [];\n\n      for (let id in db) {\n        listDate.push(db[id].date);\n        listTime.push(db[id].time);\n        listPH.push(db[id].ph);\n        listTDS.push(db[id].tds);\n        listDO.push(db[id].do);\n        listEC.push(db[id].ec);\n        listORP.push(db[id].orp);\n        listTEMP.push(db[id].temp);\n        listLon.push(db[id].lon);\n        listLat.push(db[id].lat);\n        listDb.push(db[id]);\n        listWC.push(db[id].wc);\n      }\n\n      setSensorDate(listDate);\n      setSensorTime(listTime);\n      setSensorPH(listPH);\n      setSensorTDS(listTDS);\n      setSensorDO(listDO);\n      setSensorEC(listEC);\n      setSensorORP(listORP);\n      setSensorTEMP(listTEMP);\n      setSensorLon(listLon);\n      setSensorLat(listLat);\n      setSensorWC(listWC);\n      setDbList(listDb);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        xs: 8,\n        md: 3,\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: [graphSelect > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"Monthly Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"Daily Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 82\n          }, this), graphSelect > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"asmd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"asdlk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"secondary\",\n            title: graphSelect > 0 ? \"Monthly\" : \"Daily\",\n            id: \"input-group-dropdown-1\",\n            onSelect: handleGraphSelect,\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"0\",\n              children: \"Daily\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"1\",\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onChange: handleLog,\n            value: graphDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 1,\n        className: \"g-4 justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"PH Meter\",\n          data: sensorPH,\n          labels: sensorTime,\n          linecolor: \"200, 0, 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"TDS\",\n          data: sensorTDS,\n          labels: sensorTime,\n          linecolor: \"100, 76, 102\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"DO\",\n          data: sensorDO,\n          labels: sensorTime,\n          linecolor: \"3, 6, 202\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"EC\",\n          data: sensorEC,\n          labels: sensorTime,\n          linecolor: \"205, 120, 62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"ORP\",\n          data: sensorORP,\n          labels: sensorTime,\n          linecolor: \"130, 150, 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"Temperatur\",\n          data: sensorTEMP,\n          labels: sensorTime,\n          linecolor: \"3, 76, 102\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlot, {\n          labelname: \"Water Contact\",\n          data: sensorWC,\n          labels: sensorTime,\n          linecolor: \"20, 153, 23\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graph, \"o4b9liJiHynxNIVdr8W8RfJk0K8=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/views/Graph.js"],"names":["React","useEffect","useState","firebase","SensorPlot","Row","Col","Container","InputGroup","DropdownButton","Dropdown","FormControl","Form","DatePicker","Graph","props","sensorDate","setSensorDate","sensorTime","setSensorTime","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORP","setSensorORP","sensorTEMP","setSensorTEMP","sensorLon","setSensorLon","sensorLat","setSensorLat","sensorWC","setSensorWC","dbList","setDbList","graphDate","setGraphDate","Date","graphSelect","setGraphSelect","handleGraphSelect","e","handleLog","console","log","dbRef","database","ref","on","snapshot","db","val","listDate","listTime","listPH","listTDS","listDO","listEC","listORP","listTEMP","listLon","listLat","listDb","listWC","id","push","date","time","ph","tds","do","ec","orp","temp","lon","lat","wc","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport firebase from '../util/firebase'\nimport SensorPlot from '../component/SensorPlot'\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown, FormControl } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form'\nimport DatePicker from 'react-date-picker';\n\nfunction Graph(props) {\n\n    const [sensorDate, setSensorDate] = useState()\n    const [sensorTime, setSensorTime] = useState()\n    const [sensorPH, setSensorPH] = useState()\n    const [sensorTDS, setSensorTDS] = useState()\n    const [sensorDO, setSensorDO] = useState()\n    const [sensorEC, setSensorEC] = useState()\n    const [sensorORP, setSensorORP] = useState()\n    const [sensorTEMP, setSensorTEMP] = useState()\n    const [sensorLon, setSensorLon] = useState()\n    const [sensorLat, setSensorLat] = useState()\n    const [sensorWC, setSensorWC] = useState()\n    const [dbList, setDbList] = useState()\n\n    const [graphDate, setGraphDate] = useState(new Date());\n    const [graphSelect, setGraphSelect] = useState(0);\n    const handleGraphSelect = (e) => {\n        setGraphSelect(e)\n    }\n    const handleLog = () => {\n        console.log(graphDate);\n    }\n\n    useEffect(() => {\n        const dbRef = firebase.database().ref('realtime-db/2021/09/08')\n        dbRef.on('value', (snapshot) => {\n            const db = snapshot.val()\n            const listDate = []\n            const listTime = []\n            const listPH = []\n            const listTDS = []\n            const listDO = []\n            const listEC = []\n            const listORP = []\n            const listTEMP = []\n            const listLon = []\n            const listLat = []\n            const listDb = []\n            const listWC = []\n            for (let id in db) {\n                listDate.push(db[id].date)\n                listTime.push(db[id].time)\n                listPH.push(db[id].ph)\n                listTDS.push(db[id].tds)\n                listDO.push(db[id].do)\n                listEC.push(db[id].ec)\n                listORP.push(db[id].orp)\n                listTEMP.push(db[id].temp)\n                listLon.push(db[id].lon)\n                listLat.push(db[id].lat)\n                listDb.push(db[id])\n                listWC.push(db[id].wc)\n            }\n            setSensorDate(listDate)\n            setSensorTime(listTime)\n            setSensorPH(listPH)\n            setSensorTDS(listTDS)\n            setSensorDO(listDO)\n            setSensorEC(listEC)\n            setSensorORP(listORP)\n            setSensorTEMP(listTEMP)\n            setSensorLon(listLon)\n            setSensorLat(listLat)\n            setSensorWC(listWC)\n            setDbList(listDb)\n        })\n    }, [])\n\n    return (\n        <div>\n            <Container fluid=\"md\">\n\n                <Row xs={8} md={3} className=\"justify-content-md-center\">\n                    <div className=\"Container\" style={{ textAlign: \"center\" }}>\n                        {graphSelect>0?<h1 className=\"center\">Monthly Chart</h1>:<h1 className=\"center\">Daily Chart</h1>}\n                        {graphSelect>0?<h1 className=\"center\">asmd</h1>:<h1 className=\"center\">asdlk</h1>}\n                    </div>\n                    <InputGroup className=\"mb-3\">\n                        <DropdownButton\n                            variant=\"secondary\"\n                            title={graphSelect > 0 ? \"Monthly\" : \"Daily\"}\n                            id=\"input-group-dropdown-1\"\n                            onSelect={handleGraphSelect}\n                        >\n                            <Dropdown.Item eventKey=\"0\">Daily</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"1\">Monthly</Dropdown.Item>\n                        </DropdownButton>\n\n                        <DatePicker\n                            onChange={handleLog}\n                            value={graphDate}\n                        />\n\n                    </InputGroup>\n\n\n                </Row>\n\n                <Row xs={1} md={1} className=\"g-4 justify-content-md-center\">\n                    <SensorPlot\n                        labelname=\"PH Meter\"\n                        data={sensorPH}\n                        labels={sensorTime}\n                        linecolor='200, 0, 0'\n                    />\n                    <SensorPlot\n                        labelname=\"TDS\"\n                        data={sensorTDS}\n                        labels={sensorTime}\n                        linecolor='100, 76, 102'\n                    />\n                    <SensorPlot\n                        labelname=\"DO\"\n                        data={sensorDO}\n                        labels={sensorTime}\n                        linecolor='3, 6, 202'\n                    />\n                    <SensorPlot\n                        labelname=\"EC\"\n                        data={sensorEC}\n                        labels={sensorTime}\n                        linecolor='205, 120, 62'\n                    />\n                    <SensorPlot\n                        labelname=\"ORP\"\n                        data={sensorORP}\n                        labels={sensorTime}\n                        linecolor='130, 150, 10'\n                    />\n                    <SensorPlot\n                        labelname=\"Temperatur\"\n                        data={sensorTEMP}\n                        labels={sensorTime}\n                        linecolor='3, 76, 102'\n                    />\n                    <SensorPlot\n                        labelname=\"Water Contact\"\n                        data={sensorWC}\n                        labels={sensorTime}\n                        linecolor='20, 153, 23'\n                    />\n                </Row>\n\n            </Container>\n        </div>\n    );\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}