{"ast":null,"code":"var _jsxFileName = \"/media/spektr/Data/Projek/sambigede/sambigede/src/views/Graph.js\",\n    _s = $RefreshSig$();\n\n//minor bug\n//mungkin bikin tampilan lagi loading\nimport React, { useState } from 'react';\nimport firebase from '../util/firebase';\nimport SensorPlotLine from '../component/SensorPlotLine';\nimport SensorPlotBar from '../component/SensorPlotBar';\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown } from 'react-bootstrap';\nimport DatePicker from 'react-date-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph(props) {\n  _s();\n\n  const [sensorDate, setSensorDate] = useState();\n  const [sensorTime, setSensorTime] = useState();\n  const [sensorPH, setSensorPH] = useState();\n  const [sensorTDS, setSensorTDS] = useState();\n  const [sensorDO, setSensorDO] = useState();\n  const [sensorEC, setSensorEC] = useState();\n  const [sensorORP, setSensorORP] = useState();\n  const [sensorTEMP, setSensorTEMP] = useState(); //const [sensorLon, setSensorLon] = useState()\n  //const [sensorLat, setSensorLat] = useState()\n\n  const [sensorWC, setSensorWC] = useState(); //const [dbList, setDbList] = useState()\n\n  const [idMachine, setIdMachine] = useState('kapal-1');\n  const [tanggal, setTanggal] = useState('');\n  const [bulan, setBulan] = useState('');\n  const [tahun, setTahun] = useState('');\n  const [graphDate, setGraphDate] = useState(new Date());\n  const [graphSelect, setGraphSelect] = useState(0);\n\n  const handleGraphSelect = e => {\n    setGraphSelect(e);\n  };\n\n  const monthText = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n\n  const filterArr = arr => arr.filter(function (element) {\n    return element !== undefined;\n  });\n\n  const arrAvg = arr => filterArr(arr).reduce((a, b) => a + b, 0) / filterArr(arr).length;\n\n  const average = array => array.reduce((a, b) => a + b) / array.length;\n\n  const grafikBulanan = () => {\n    const dbRef = firebase.database().ref('dbrt').child(idMachine).child(graphDate.getFullYear()).child(graphDate.getMonth() + 1);\n    dbRef.on('value', snapshot => {\n      const db = snapshot.val();\n      const bulananPH = [];\n      const bulananTDS = [];\n      const bulananDO = [];\n      const bulananEC = [];\n      const bulananORP = [];\n      const bulananTEMP = [];\n      const bulananWC = [];\n      const bulananDate = [];\n      const bulananTime = [];\n\n      for (let id in db) {\n        const avgPH = [];\n        const avgTDS = [];\n        const avgDO = [];\n        const avgEC = [];\n        const avgORP = [];\n        const avgTEMP = [];\n        const avgWC = [];\n        const avgDate = [];\n\n        for (let data in db[id]) {\n          //console.log(id,db[id][data].ph)\n          avgPH.push(db[id][data].ph);\n          avgTDS.push(db[id][data].tds);\n          avgDO.push(db[id][data].do);\n          avgEC.push(db[id][data].ec);\n          avgORP.push(db[id][data].orp);\n          avgTEMP.push(db[id][data].temp);\n          avgWC.push(db[id][data].wc);\n          avgDate.push(db[id][data].date); //console.log(data);\n        } //ratarata(avgPH)\n\n\n        console.log(\"lakukan proses rata2 di avg PH terus di push ke var sbnrnya\");\n        console.log(\"bulan ke \", id);\n        console.log(\"seluruh\", avgPH);\n        console.log(\"rata-rata\", average([1, 2, 3, 4, 5]));\n        bulananTime.push(id);\n        bulananDate.push(avgDate);\n        bulananPH.push(arrAvg(avgPH));\n        bulananTDS.push(arrAvg(avgTDS));\n        bulananDO.push(arrAvg(avgDO));\n        bulananEC.push(arrAvg(avgEC));\n        bulananORP.push(arrAvg(avgORP));\n        bulananTEMP.push(arrAvg(avgTEMP));\n        bulananWC.push(arrAvg(avgWC)); //console.log(bulananDate);\n      }\n\n      setSensorDate(bulananDate);\n\n      try {\n        var temp = sensorDate[0][0].split(\"/\");\n        setTanggal('');\n        setBulan(monthText[temp[1] - 1]);\n        setTahun(temp[2]); //console.log(temp)\n\n        setSensorTime(bulananTime);\n        setSensorPH(bulananPH);\n        setSensorTDS(bulananTDS);\n        setSensorDO(bulananDO);\n        setSensorEC(bulananEC);\n        setSensorORP(bulananORP);\n        setSensorTEMP(bulananTEMP);\n        setSensorWC(bulananWC);\n      } catch (e) {\n        console.error(\"Error\");\n        setTanggal('');\n        setBulan(\"Data\");\n        setTahun(\"Tidak Ditemukan\");\n        setSensorTime([]);\n        setSensorPH([]);\n        setSensorTDS([]);\n        setSensorDO([]);\n        setSensorEC([]);\n        setSensorORP([]);\n        setSensorTEMP([]);\n        setSensorWC([]);\n      }\n\n      console.log(\"Bulanan\"); //console.log(sensorDate);\n    });\n  };\n\n  const grafikHarian = () => {\n    const dbRef = firebase.database().ref('dbrt').child(idMachine).child(graphDate.getFullYear()).child(graphDate.getMonth() + 1).child(graphDate.getDate());\n    dbRef.on('value', snapshot => {\n      const db = snapshot.val(); //const listDb = []\n\n      const listDate = [];\n      const listTime = [];\n      const listPH = [];\n      const listTDS = [];\n      const listDO = [];\n      const listEC = [];\n      const listORP = [];\n      const listTEMP = [];\n      const listWC = [];\n\n      for (let id in db) {\n        //listDb.push(db[id])\n        listDate.push(db[id].date);\n        listTime.push(db[id].time);\n        listPH.push(db[id].ph);\n        listTDS.push(db[id].tds);\n        listDO.push(db[id].do);\n        listEC.push(db[id].ec);\n        listORP.push(db[id].orp);\n        listTEMP.push(db[id].temp);\n        listWC.push(db[id].wc);\n      } //setDbList(listDb)\n\n\n      setSensorDate(listDate);\n\n      try {\n        var temp = sensorDate[0].split(\"/\");\n        setTanggal(temp[0]);\n        setBulan(monthText[temp[1] - 1]);\n        setTahun(temp[2]);\n        console.log(temp);\n        setSensorTime(listTime);\n        setSensorPH(listPH);\n        setSensorTDS(listTDS);\n        setSensorDO(listDO);\n        setSensorEC(listEC);\n        setSensorORP(listORP);\n        setSensorTEMP(listTEMP);\n        setSensorWC(listWC);\n      } catch (e) {\n        console.error(\"Error\");\n        setTanggal(\"\");\n        setBulan(\"Data\");\n        setTahun(\"Tidak Ditemukan\");\n        setSensorTime([]);\n        setSensorPH([]);\n        setSensorTDS([]);\n        setSensorDO([]);\n        setSensorEC([]);\n        setSensorORP([]);\n        setSensorTEMP([]);\n        setSensorWC([]);\n      }\n    });\n    console.log(\"Harian\");\n  };\n\n  const handleRefresh = async () => {\n    graphSelect > 0 ? grafikBulanan() : grafikHarian();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        xs: 8,\n        md: 3,\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: [graphSelect > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"Grafik Bulanan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"center\",\n            children: \"Grafik Harian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 89\n          }, this), graphSelect > 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"center\",\n            children: `${bulan} ${tahun}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"center\",\n            children: `${tanggal} ${bulan} ${tahun}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleRefresh,\n            className: \"btn btn-primary\",\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"secondary\",\n            title: graphSelect > 0 ? \"Bulanan\" : \"Harian\",\n            id: \"input-group-dropdown-1\",\n            onSelect: handleGraphSelect,\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"0\",\n              children: \"Harian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"1\",\n              children: \"Bulanan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onChange: setGraphDate,\n            value: graphDate,\n            format: \"d-M-y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), graphSelect > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 1,\n        className: \"g-4 justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(SensorPlotBar, {\n          labelname: \"PH Meter\",\n          data: sensorPH,\n          labels: sensorTime,\n          linecolor: \"232, 104, 252\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotBar, {\n          labelname: \"TDS\",\n          data: sensorTDS,\n          labels: sensorTime,\n          linecolor: \"0, 204, 255\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotBar, {\n          labelname: \"DO\",\n          data: sensorDO,\n          labels: sensorTime,\n          linecolor: \"168, 51, 204\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotBar, {\n          labelname: \"EC\",\n          data: sensorEC,\n          labels: sensorTime,\n          linecolor: \"255, 102, 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotBar, {\n          labelname: \"ORP\",\n          data: sensorORP,\n          labels: sensorTime,\n          linecolor: \"0, 153, 51\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotBar, {\n          labelname: \"Temperatur\",\n          data: sensorTEMP,\n          labels: sensorTime,\n          linecolor: \"153, 153, 255\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotBar, {\n          labelname: \"Water Contact\",\n          data: sensorWC,\n          labels: sensorTime,\n          linecolor: \"9, 118, 158\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 1,\n        className: \"g-4 justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(SensorPlotLine, {\n          labelname: \"PH Meter\",\n          data: sensorPH,\n          labels: sensorTime,\n          linecolor: \"200, 0, 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotLine, {\n          labelname: \"TDS\",\n          data: sensorTDS,\n          labels: sensorTime,\n          linecolor: \"100, 76, 102\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotLine, {\n          labelname: \"DO\",\n          data: sensorDO,\n          labels: sensorTime,\n          linecolor: \"3, 6, 202\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotLine, {\n          labelname: \"EC\",\n          data: sensorEC,\n          labels: sensorTime,\n          linecolor: \"205, 120, 62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotLine, {\n          labelname: \"ORP\",\n          data: sensorORP,\n          labels: sensorTime,\n          linecolor: \"130, 150, 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotLine, {\n          labelname: \"Temperatur\",\n          data: sensorTEMP,\n          labels: sensorTime,\n          linecolor: \"3, 76, 102\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SensorPlotLine, {\n          labelname: \"Water Contact\",\n          data: sensorWC,\n          labels: sensorTime,\n          linecolor: \"20, 153, 23\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graph, \"dnVP7we+5/cWBrJS0V2Y296cGG0=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/media/spektr/Data/Projek/sambigede/sambigede/src/views/Graph.js"],"names":["React","useState","firebase","SensorPlotLine","SensorPlotBar","Row","Col","Container","InputGroup","DropdownButton","Dropdown","DatePicker","Graph","props","sensorDate","setSensorDate","sensorTime","setSensorTime","sensorPH","setSensorPH","sensorTDS","setSensorTDS","sensorDO","setSensorDO","sensorEC","setSensorEC","sensorORP","setSensorORP","sensorTEMP","setSensorTEMP","sensorWC","setSensorWC","idMachine","setIdMachine","tanggal","setTanggal","bulan","setBulan","tahun","setTahun","graphDate","setGraphDate","Date","graphSelect","setGraphSelect","handleGraphSelect","e","monthText","filterArr","arr","filter","element","undefined","arrAvg","reduce","a","b","length","average","array","grafikBulanan","dbRef","database","ref","child","getFullYear","getMonth","on","snapshot","db","val","bulananPH","bulananTDS","bulananDO","bulananEC","bulananORP","bulananTEMP","bulananWC","bulananDate","bulananTime","id","avgPH","avgTDS","avgDO","avgEC","avgORP","avgTEMP","avgWC","avgDate","data","push","ph","tds","do","ec","orp","temp","wc","date","console","log","split","error","grafikHarian","getDate","listDate","listTime","listPH","listTDS","listDO","listEC","listORP","listTEMP","listWC","time","handleRefresh","textAlign"],"mappings":"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","sourcesContent":["//minor bug\n//mungkin bikin tampilan lagi loading\n\nimport React, { useState } from 'react';\nimport firebase from '../util/firebase'\nimport SensorPlotLine from '../component/SensorPlotLine'\nimport SensorPlotBar from '../component/SensorPlotBar'\nimport { Row, Col, Container, InputGroup, DropdownButton, Dropdown } from 'react-bootstrap';\nimport DatePicker from 'react-date-picker';\n\n\nfunction Graph(props) {\n\n    const [sensorDate, setSensorDate] = useState()\n    const [sensorTime, setSensorTime] = useState()\n    const [sensorPH, setSensorPH] = useState()\n    const [sensorTDS, setSensorTDS] = useState()\n    const [sensorDO, setSensorDO] = useState()\n    const [sensorEC, setSensorEC] = useState()\n    const [sensorORP, setSensorORP] = useState()\n    const [sensorTEMP, setSensorTEMP] = useState()\n    //const [sensorLon, setSensorLon] = useState()\n    //const [sensorLat, setSensorLat] = useState()\n    const [sensorWC, setSensorWC] = useState()\n    //const [dbList, setDbList] = useState()\n\n    const [idMachine, setIdMachine] = useState('kapal-1')\n    const [tanggal, setTanggal] = useState('')\n    const [bulan, setBulan] = useState('')\n    const [tahun, setTahun] = useState('')\n\n    const [graphDate, setGraphDate] = useState(new Date());\n    const [graphSelect, setGraphSelect] = useState(0);\n\n    const handleGraphSelect = (e) => {\n        setGraphSelect(e)\n    }\n    const monthText = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n\n    const filterArr = arr => arr.filter(function (element) {\n        return element !== undefined;\n    });\n\n    const arrAvg = arr => filterArr(arr).reduce((a,b) => a + b, 0) / filterArr(arr).length\n\n    const average = (array) => array.reduce((a, b) => a + b) / array.length;\n\n    const grafikBulanan = () => {\n        const dbRef = firebase.database().ref('dbrt').child(idMachine).child(graphDate.getFullYear()).child(graphDate.getMonth() + 1)\n        dbRef.on('value', (snapshot) => {\n            const db = snapshot.val()\n            const bulananPH = []\n            const bulananTDS = []\n            const bulananDO = []\n            const bulananEC = []\n            const bulananORP = []\n            const bulananTEMP = []\n            const bulananWC = []\n            const bulananDate = []\n            const bulananTime = []\n\n\n            for (let id in db) {\n                const avgPH = []\n                const avgTDS = []\n                const avgDO = []\n                const avgEC = []\n                const avgORP = []\n                const avgTEMP = []\n                const avgWC = []\n                const avgDate = []\n\n                for (let data in db[id]) {\n                    //console.log(id,db[id][data].ph)\n                    avgPH.push(db[id][data].ph)\n                    avgTDS.push(db[id][data].tds)\n                    avgDO.push(db[id][data].do)\n                    avgEC.push(db[id][data].ec)\n                    avgORP.push(db[id][data].orp)\n                    avgTEMP.push(db[id][data].temp)\n                    avgWC.push(db[id][data].wc)\n                    avgDate.push(db[id][data].date)\n                    //console.log(data);\n                    \n\n                }\n\n                //ratarata(avgPH)\n                console.log(\"lakukan proses rata2 di avg PH terus di push ke var sbnrnya\");\n                console.log(\"bulan ke \", id);\n                console.log(\"seluruh\", avgPH);\n                console.log(\"rata-rata\", average([1,2,3,4,5]))\n\n                bulananTime.push(id)\n                bulananDate.push(avgDate)\n                bulananPH.push(arrAvg(avgPH))\n                bulananTDS.push(arrAvg(avgTDS))\n                bulananDO.push(arrAvg(avgDO))\n                bulananEC.push(arrAvg(avgEC))\n                bulananORP.push(arrAvg(avgORP))\n                bulananTEMP.push(arrAvg(avgTEMP))\n                bulananWC.push(arrAvg(avgWC))\n\n                //console.log(bulananDate);\n\n            }\n            setSensorDate(bulananDate)\n\n            try {\n                var temp = sensorDate[0][0].split(\"/\")\n                setTanggal('')\n                setBulan(monthText[temp[1] - 1])\n                setTahun(temp[2])\n                //console.log(temp)\n                setSensorTime(bulananTime)\n                setSensorPH(bulananPH)\n                setSensorTDS(bulananTDS)\n                setSensorDO(bulananDO)\n                setSensorEC(bulananEC)\n                setSensorORP(bulananORP)\n                setSensorTEMP(bulananTEMP)\n                setSensorWC(bulananWC)\n            } catch (e) {\n                console.error(\"Error\")\n                setTanggal('')\n                setBulan(\"Data\")\n                setTahun(\"Tidak Ditemukan\")\n                setSensorTime([])\n                setSensorPH([])\n                setSensorTDS([])\n                setSensorDO([])\n                setSensorEC([])\n                setSensorORP([])\n                setSensorTEMP([])\n                setSensorWC([])\n            }\n\n\n            console.log(\"Bulanan\")\n            //console.log(sensorDate);\n\n\n        })\n\n    }\n\n    const grafikHarian = () => {\n        const dbRef = firebase.database().ref('dbrt').child(idMachine).child(graphDate.getFullYear()).child(graphDate.getMonth() + 1).child(graphDate.getDate())\n        dbRef.on('value', (snapshot) => {\n            const db = snapshot.val()\n            //const listDb = []\n            const listDate = []\n            const listTime = []\n            const listPH = []\n            const listTDS = []\n            const listDO = []\n            const listEC = []\n            const listORP = []\n            const listTEMP = []\n            const listWC = []\n\n            for (let id in db) {\n                //listDb.push(db[id])\n                listDate.push(db[id].date)\n                listTime.push(db[id].time)\n                listPH.push(db[id].ph)\n                listTDS.push(db[id].tds)\n                listDO.push(db[id].do)\n                listEC.push(db[id].ec)\n                listORP.push(db[id].orp)\n                listTEMP.push(db[id].temp)\n                listWC.push(db[id].wc)\n            }\n            //setDbList(listDb)\n\n            setSensorDate(listDate)\n\n            try {\n                var temp = sensorDate[0].split(\"/\")\n                setTanggal(temp[0])\n                setBulan(monthText[temp[1] - 1])\n                setTahun(temp[2])\n                console.log(temp)\n                setSensorTime(listTime)\n                setSensorPH(listPH)\n                setSensorTDS(listTDS)\n                setSensorDO(listDO)\n                setSensorEC(listEC)\n                setSensorORP(listORP)\n                setSensorTEMP(listTEMP)\n                setSensorWC(listWC)\n\n            } catch (e) {\n                console.error(\"Error\")\n                setTanggal(\"\")\n                setBulan(\"Data\")\n                setTahun(\"Tidak Ditemukan\")\n                setSensorTime([])\n                setSensorPH([])\n                setSensorTDS([])\n                setSensorDO([])\n                setSensorEC([])\n                setSensorORP([])\n                setSensorTEMP([])\n                setSensorWC([])\n            }\n\n        })\n        console.log(\"Harian\")\n\n    }\n\n    const handleRefresh = async () => {\n\n        graphSelect > 0 ? grafikBulanan() : grafikHarian()\n\n    }\n\n    return (\n        <div>\n            <Container fluid=\"md\">\n\n                <Row xs={8} md={3} className=\"justify-content-md-center\">\n                    <div className=\"Container\" style={{ textAlign: \"center\" }}>\n                        {graphSelect > 0 ? <h1 className=\"center\">Grafik Bulanan</h1> : <h1 className=\"center\">Grafik Harian</h1>}\n                        {graphSelect > 0\n                            ? <h2 className=\"center\">{`${bulan} ${tahun}`}</h2>\n                            : <h2 className=\"center\">{`${tanggal} ${bulan} ${tahun}`}</h2>}\n                    </div>\n                    <InputGroup className=\"mb-3\">\n                        <button type=\"button\" onClick={handleRefresh} className=\"btn btn-primary\">Refresh</button>\n                        <DropdownButton\n                            variant=\"secondary\"\n                            title={graphSelect > 0 ? \"Bulanan\" : \"Harian\"}\n                            id=\"input-group-dropdown-1\"\n                            onSelect={handleGraphSelect}\n                        >\n                            <Dropdown.Item eventKey=\"0\">Harian</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"1\">Bulanan</Dropdown.Item>\n                        </DropdownButton>\n\n                        <DatePicker\n                            onChange={setGraphDate}\n                            value={graphDate}\n                            format=\"d-M-y\"\n                        />\n\n                    </InputGroup>\n                </Row>\n\n\n                {graphSelect > 0\n                    ?\n                    (\n                        <Row xs={1} md={1} className=\"g-4 justify-content-md-center\">\n                            <SensorPlotBar\n                                labelname=\"PH Meter\"\n                                data={sensorPH}\n                                labels={sensorTime}\n                                linecolor='232, 104, 252'\n                            />\n                            <SensorPlotBar\n                                labelname=\"TDS\"\n                                data={sensorTDS}\n                                labels={sensorTime}\n                                linecolor='0, 204, 255'\n                            />\n                            <SensorPlotBar\n                                labelname=\"DO\"\n                                data={sensorDO}\n                                labels={sensorTime}\n                                linecolor='168, 51, 204'\n                            />\n                            <SensorPlotBar\n                                labelname=\"EC\"\n                                data={sensorEC}\n                                labels={sensorTime}\n                                linecolor='255, 102, 0'\n                            />\n                            <SensorPlotBar\n                                labelname=\"ORP\"\n                                data={sensorORP}\n                                labels={sensorTime}\n                                linecolor='0, 153, 51'\n                            />\n                            <SensorPlotBar\n                                labelname=\"Temperatur\"\n                                data={sensorTEMP}\n                                labels={sensorTime}\n                                linecolor='153, 153, 255'\n                            />\n                            <SensorPlotBar\n                                labelname=\"Water Contact\"\n                                data={sensorWC}\n                                labels={sensorTime}\n                                linecolor='9, 118, 158'\n                            />\n                        </Row>\n                    )\n                    :\n                    (\n                        <Row xs={1} md={1} className=\"g-4 justify-content-md-center\">\n                            <SensorPlotLine\n                                labelname=\"PH Meter\"\n                                data={sensorPH}\n                                labels={sensorTime}\n                                linecolor='200, 0, 0'\n                            />\n                            <SensorPlotLine\n                                labelname=\"TDS\"\n                                data={sensorTDS}\n                                labels={sensorTime}\n                                linecolor='100, 76, 102'\n                            />\n                            <SensorPlotLine\n                                labelname=\"DO\"\n                                data={sensorDO}\n                                labels={sensorTime}\n                                linecolor='3, 6, 202'\n                            />\n                            <SensorPlotLine\n                                labelname=\"EC\"\n                                data={sensorEC}\n                                labels={sensorTime}\n                                linecolor='205, 120, 62'\n                            />\n                            <SensorPlotLine\n                                labelname=\"ORP\"\n                                data={sensorORP}\n                                labels={sensorTime}\n                                linecolor='130, 150, 10'\n                            />\n                            <SensorPlotLine\n                                labelname=\"Temperatur\"\n                                data={sensorTEMP}\n                                labels={sensorTime}\n                                linecolor='3, 76, 102'\n                            />\n                            <SensorPlotLine\n                                labelname=\"Water Contact\"\n                                data={sensorWC}\n                                labels={sensorTime}\n                                linecolor='20, 153, 23'\n                            />\n                        </Row>\n                    )\n                }\n\n\n            </Container>\n        </div>\n    );\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}