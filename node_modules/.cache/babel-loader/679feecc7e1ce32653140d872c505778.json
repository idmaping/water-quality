{"ast":null,"code":"var _jsxFileName = \"/media/spektrum/Data/Projek/sambigede/sambigede/src/component/SensorPlot.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphPlot(props) {\n  const data = {\n    labels: props.labels,\n    datasets: [{\n      label: props.labelname,\n      data: props.data,\n      fill: false,\n      //backgroundColor: 'rgb(75, 192, 192)',\n      backgroundColor: `rgb(${props.linecolor})`,\n      borderColor: `rgb(${props.linecolor},0.5)`,\n      //borderColor: 'rgba(75, 192, 192, 0.7)',\n      borderWidth: 3,\n      pointStyle: 'circle',\n      pointRadius: 1,\n      tension: 0.1\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      class: \"mb-3\",\n      style: {\n        minWidth: \"18rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GraphPlot;\nexport default GraphPlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphPlot\");","map":{"version":3,"sources":["/media/spektrum/Data/Projek/sambigede/sambigede/src/component/SensorPlot.js"],"names":["React","useEffect","useState","Line","Card","GraphPlot","props","data","labels","datasets","label","labelname","fill","backgroundColor","linecolor","borderColor","borderWidth","pointStyle","pointRadius","tension","options","scales","yAxes","ticks","beginAtZero","minWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MADH;AAEXC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,SADf;AAEEJ,MAAAA,IAAI,EAAED,KAAK,CAACC,IAFd;AAGEK,MAAAA,IAAI,EAAE,KAHR;AAIE;AACAC,MAAAA,eAAe,EAAG,OAAMP,KAAK,CAACQ,SAAU,GAL1C;AAMEC,MAAAA,WAAW,EAAG,OAAMT,KAAK,CAACQ,SAAU,OANtC;AAQE;AACAE,MAAAA,WAAW,EAAE,CATf;AAUEC,MAAAA,UAAU,EAAE,QAVd;AAWEC,MAAAA,WAAW,EAAE,CAXf;AAYEC,MAAAA,OAAO,EAAE;AAZX,KADQ;AAFC,GAAb;AAoBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AADR;AADT,OADK;AADD;AADM,GAAhB;AAYA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA1B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAElB,IAAZ;AAAkB,QAAA,OAAO,EAAEa;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KA1CQf,S;AA4CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\n\nfunction GraphPlot(props) {\n  const data = {\n    labels: props.labels,\n    datasets: [\n      {\n        label: props.labelname,\n        data: props.data,\n        fill: false,\n        //backgroundColor: 'rgb(75, 192, 192)',\n        backgroundColor: `rgb(${props.linecolor})`,\n        borderColor: `rgb(${props.linecolor},0.5)`,\n\n        //borderColor: 'rgba(75, 192, 192, 0.7)',\n        borderWidth: 3,\n        pointStyle: 'circle',\n        pointRadius: 1,\n        tension: 0.1,\n      },\n    ],\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  }\n\n  return (\n    <div>\n      <Card class=\"mb-3\" style={{ minWidth: \"18rem\" }}>\n        <Line data={data} options={options}/>\n\n      </Card>\n\n    </div>\n  );\n}\n\nexport default GraphPlot;"]},"metadata":{},"sourceType":"module"}